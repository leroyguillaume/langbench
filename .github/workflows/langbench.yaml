name: langbench

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      languages:
        description: 'Space-separated list of languages to benchmark (default: all)'
        type: string
        required: false
      benchmarks:
        description: 'Space-separated list of benchmarks to run (default: all)'
        type: string
        required: false
      count:
        description: The number of integers to generate
        type: number
        required: true
        default: 10000000
      iterations:
        description: The number of iterations
        type: number
        required: true
        default: 5
      log-level:
        description: The log level
        required: true
        type: choice
        options:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
        default: INFO
      commit:
        description: Commit and push the results
        type: boolean
        required: true
        default: true

jobs:
  benchmark:
    strategy:
      matrix:
        runs_on:
          - ubuntu-22.04
          - ubuntu-22.04-arm
    runs-on: ${{ matrix.runs_on }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          enable-cache: true

      - name: set up buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: restore data cache
        uses: actions/cache/restore@v4
        with:
          path: data
          key: data-${{ inputs.count }}-${{ inputs.iterations }}-${{ hashFiles('data/**') }}
          restore-keys: |
            data-${{ inputs.count }}-${{ inputs.iterations }}-

      - name: restore buildx cache
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.arch }}-${{ hashFiles('benchmarks/**') }}-${{ inputs.languages }}
          restore-keys: |
            buildx-${{ runner.arch }}-${{ hashFiles('benchmarks/**') }}-
            buildx-${{ runner.arch }}-
            buildx-

      - name: install langbench
        run: uv pip install --system .

      - name: generate data
        run: |
          if [ ! -d data ]; then
            langbench generate-data \
              -c ${{ inputs.count }} \
              -i ${{ inputs.iterations }}
          fi

      - name: run benchmark
        env:
          LANGBENCH_BENCHMARKS: ${{ inputs.benchmarks }}
          LANGBENCH_LANGUAGES: ${{ inputs.languages }}
        run: |
          langbench run \
            -c ${{ inputs.count }} \
            -i ${{ inputs.iterations }} \
            --log-level ${{ inputs.log-level }} \
            --docker-cache /tmp/.buildx-cache \
            --no-render

      - name: commit and push results
        if: inputs.commit
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add results
          git commit -m "benchmark(${{ runner.arch }} $(nproc) ${{ inputs.count }} ${{ inputs.iterations }}): update results"
          git pull --rebase
          git push

      - name: save data cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: data
          key: data-${{ inputs.count }}-${{ inputs.iterations }}-${{ hashFiles('data/**') }}

      - name: save buildx cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.arch }}-${{ hashFiles('benchmarks/**') }}-${{ inputs.languages }}

  render:
    if: inputs.commit
    needs: benchmark
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          enable-cache: true

      - name: install langbench
        run: uv pip install --system .

      - name: pull changes
        run: git pull --rebase

      - name: render
        run: langbench render

      - name: commit and push reports
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add reports
          git commit -m "benchmark(${{ runner.arch }} $(nproc) ${{ inputs.count }} ${{ inputs.iterations }}): update reports"
          git push
